name: React Build Deployment

on:
  push:
    branches: [ "main", "master" ]
  
jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write  # 确保有包发布权限

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set version variables
      id: version
      run: |
        if [ ! -f version.txt ]; then
          echo "1.0.0" > version.txt
          echo "Created default version.txt file"
        fi
        BASE_VERSION=$(cat version.txt | tr -d '\n\r')
        echo "BUILD_DATE=$(date +'%Y%m%d')" >> $GITHUB_ENV
        echo "COMMIT_HASH=$(git rev-parse --short HEAD)" >> $GITHUB_ENV
        echo "BASE_VERSION=${BASE_VERSION}" >> $GITHUB_ENV
        echo "VERSION=${BASE_VERSION}-build-$(date +'%Y%m%d')-$(git rev-parse --short HEAD)" >> $GITHUB_ENV
        echo "Version set to: ${BASE_VERSION}-build-$(date +'%Y%m%d')-$(git rev-parse --short HEAD)"

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'yarn'
        cache-dependency-path: './miku-live/yarn.lock'

    - name: Install dependencies
      working-directory: ./miku-live
      run: yarn install

    - name: Build project
      working-directory: ./miku-live
      run: |
        yarn run build
        if [ ! -d "dist" ]; then
          echo "::error::Build directory not found! Build may have failed."
          exit 1
        fi
      
    - name: Create docker directory structure
      run: |
        mkdir -p docker/build
        echo "Preparing docker build files..."
      
    - name: Move build files to docker directory
      run: |
        cp -R ./miku-live/dist/* ./docker/build/
        echo "Moved build files to docker directory"

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    # 新增：登录到GitHub Container Registry
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    # 修改：构建并推送镜像到GHCR
    - name: Build and push docker image
      working-directory: ./docker
      run: |
        IMAGE_NAME=ghcr.io/${{ github.repository }}/miku_live
        echo "Building and pushing Docker image: $IMAGE_NAME:${{ env.VERSION }}"
        docker build -t $IMAGE_NAME:${{ env.VERSION }} -t $IMAGE_NAME:latest .
        docker push $IMAGE_NAME:${{ env.VERSION }}
        docker push $IMAGE_NAME:latest
      env:
        DOCKER_BUILDKIT: 1
        
    # 可选：移除本地tar文件归档步骤（因为已推送）
    # - name: Archive Docker image
    #   uses: actions/upload-artifact@v4
    #   with:
    #     name: miku_live_docker_image-${{ env.VERSION }}
    #     path: docker/miku_live-${{ env.VERSION }}.tar
    #     retention-days: 5
        
    - name: Generate changelog
      id: changelog
      run: |
        echo "# Miku Music Card - Release ${{ env.VERSION }}" > changelog.md
        echo "Build date: $(date +'%Y-%m-%d %H:%M:%S')" >> changelog.md
        echo "" >> changelog.md
        echo "## Changes in this build:" >> changelog.md
        git log -10 --pretty=format:"* %s (%h) - %an" >> changelog.md
        echo "" >> changelog.md
        echo "## Docker Image:" >> changelog.md
        echo "\`ghcr.io/${{ github.repository }}/miku_live:${{ env.VERSION }}\`" >> changelog.md

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        name: Release ${{ env.VERSION }}
        tag_name: v${{ env.VERSION }}
        body_path: changelog.md
        # files: docker/miku_live-${{ env.VERSION }}.tar  # 移除，因为已推送
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Deployment Status
      run: |
        echo "::notice::Deployment completed successfully!"
        echo "::notice::Version: ${{ env.VERSION }}"
        echo "::notice::Docker image pushed to GHCR"